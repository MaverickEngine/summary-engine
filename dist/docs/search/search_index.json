{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to SummaryEngine SummaryEngine is a Wordpress plugin that uses machine learning to help editors generate summaries to articles. It would typically be used in a newsroom, but can be used in other contexts too. It uses the \"human-in-the-loop\" approach, where the editor is responsible for quality control, and can choose to accept, reject or edit the summary.","title":"Home"},{"location":"#welcome-to-summaryengine","text":"SummaryEngine is a Wordpress plugin that uses machine learning to help editors generate summaries to articles. It would typically be used in a newsroom, but can be used in other contexts too. It uses the \"human-in-the-loop\" approach, where the editor is responsible for quality control, and can choose to accept, reject or edit the summary.","title":"Welcome to SummaryEngine"},{"location":"admins/","text":"SummaryEngine For Wordpress Administrators SummaryEngine is a Wordpress plugin that uses machine learning to help editors generate summaries to articles. It would typically be used in a newsroom, but can be used in other contexts too. It uses the \"human-in-the-loop\" approach, where the editor is responsible for quality control, and can choose to accept, reject or edit the summary. SummaryEngine uses OpenAI's Open-GPT machine learning models, so you will need an API key to use it. You can get one here . Installation Download the plugin from Github Upload the plugin to your Wordpress site Unzip the plugin Activate the plugin Configuration OpenAI API Key You can set the API Key in the Wordpress admin panel, under SummaryEngine > Settings. However, we recommend setting the API Key in the Wordpress config file, wp-config.php (or vip-config.php if you're a Wordpress VIP member). To do this, add the following line to your config file: define( 'OPENAI_APIKEY', 'sk-RandomKey' ); SummaryEngine Settings You can set the following settings in the Wordpress admin panel, under SummaryEngine > Settings: Post Types - The post types that will have the SummaryEngine metabox. Generate summaries when posts are published? - Whether to automatically generate summaries when posts are published. These summaries will be unapproved. RSS post limit - The maximum number of posts to include in the SummaryEngine RSS feeds (per page). See RSS Feeds for more information. Maximum number of submissions per post - The maximum number of submissions that can be generated for each post for each type of summary. Set to -1 for unlimited. Keep in mind that each sumission carries a cost. SummaryEngine Summary Types You can create, delete and manage different types of summaries in the Wordpress admin panel, under SummaryEngine > Types. Click the \"New Type\" tab to create a new type. Types have the following fields: Name - The name of the type. This is used to identify the type in the admin panel, and is also used in the RSS feed. Slug - The slug of the type. This will be used in as the post metadata key. It is automatically generated from the name. Prepend Prompt - This is typically the instruction you want to send to the model, such as \"Write a summary of this article\". It will be prepended to the article text that we submit to GPT-3. Append Prompt - This is typically an example of the format we want returned, and important to note that it will be appended to the result. For instance, you might want to add a bullet point ( - ) to the end of the prompt, so that the model knows to return a bullet-pointed list. Usually you will leave this blank. OpenAI Model OpenAI Model - The OpenAI model to use. You can choose from Text-Davinci-001, Text-Davinci-002, Text-Davinci-003, Text-Curie-001, Text-Babbage-001 or Text-Ada-001. There are cost implications with choosing a better model, and it might not always perform as well as one of the other options. See OpenAI's documentation for more information. Submission word limit - The maximum number of words to allow in a submission. Very long articles could either become very expensive, or the model might not be able to generate a summary. For some cases, you might get better results by exposing less of the article, which can bring in unimportant points, provided your article is written in the pyramid style. We recommend between 500 and 750 words, although for Tweets, you can go down to 250 or so. Cut at paragraph nearest end? - Whether to cut the article at the nearest paragraph to the word limit. This is useful if you want to avoid cutting a sentence in half. If you don't want to cut at the nearest paragraph, the article will be cut at the word limit. Max Tokens - This is the maximum number of tokens that OpenAI will use, but be aware that it includes both the submitted text as well as the result. A low number can result in the response being truncated. Make sure your number is high enough to allow for the submitted text, and the result. See What are tokens and how to count them? for more information. Temperature - What sampling temperature to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer. We generally recommend altering this or top_p but not both. Top P - What top_p to use. An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We generally recommend altering this or temperature but not both. Presence Penalty - Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics. Frequency Penalty - Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim. Custom action - Call a custom action based on the summary and post, eg. post to Twitter. Use [post_url] and [summary], and [summary_encoded] as variables. See Custom Actions for more information.","title":"For Administrators"},{"location":"admins/#summaryengine-for-wordpress-administrators","text":"SummaryEngine is a Wordpress plugin that uses machine learning to help editors generate summaries to articles. It would typically be used in a newsroom, but can be used in other contexts too. It uses the \"human-in-the-loop\" approach, where the editor is responsible for quality control, and can choose to accept, reject or edit the summary. SummaryEngine uses OpenAI's Open-GPT machine learning models, so you will need an API key to use it. You can get one here .","title":"SummaryEngine For Wordpress Administrators"},{"location":"admins/#installation","text":"Download the plugin from Github Upload the plugin to your Wordpress site Unzip the plugin Activate the plugin","title":"Installation"},{"location":"admins/#configuration","text":"","title":"Configuration"},{"location":"admins/#openai-api-key","text":"You can set the API Key in the Wordpress admin panel, under SummaryEngine > Settings. However, we recommend setting the API Key in the Wordpress config file, wp-config.php (or vip-config.php if you're a Wordpress VIP member). To do this, add the following line to your config file: define( 'OPENAI_APIKEY', 'sk-RandomKey' );","title":"OpenAI API Key"},{"location":"admins/#summaryengine-settings","text":"You can set the following settings in the Wordpress admin panel, under SummaryEngine > Settings: Post Types - The post types that will have the SummaryEngine metabox. Generate summaries when posts are published? - Whether to automatically generate summaries when posts are published. These summaries will be unapproved. RSS post limit - The maximum number of posts to include in the SummaryEngine RSS feeds (per page). See RSS Feeds for more information. Maximum number of submissions per post - The maximum number of submissions that can be generated for each post for each type of summary. Set to -1 for unlimited. Keep in mind that each sumission carries a cost.","title":"SummaryEngine Settings"},{"location":"admins/#summaryengine-summary-types","text":"You can create, delete and manage different types of summaries in the Wordpress admin panel, under SummaryEngine > Types. Click the \"New Type\" tab to create a new type. Types have the following fields: Name - The name of the type. This is used to identify the type in the admin panel, and is also used in the RSS feed. Slug - The slug of the type. This will be used in as the post metadata key. It is automatically generated from the name. Prepend Prompt - This is typically the instruction you want to send to the model, such as \"Write a summary of this article\". It will be prepended to the article text that we submit to GPT-3. Append Prompt - This is typically an example of the format we want returned, and important to note that it will be appended to the result. For instance, you might want to add a bullet point ( - ) to the end of the prompt, so that the model knows to return a bullet-pointed list. Usually you will leave this blank. OpenAI Model OpenAI Model - The OpenAI model to use. You can choose from Text-Davinci-001, Text-Davinci-002, Text-Davinci-003, Text-Curie-001, Text-Babbage-001 or Text-Ada-001. There are cost implications with choosing a better model, and it might not always perform as well as one of the other options. See OpenAI's documentation for more information. Submission word limit - The maximum number of words to allow in a submission. Very long articles could either become very expensive, or the model might not be able to generate a summary. For some cases, you might get better results by exposing less of the article, which can bring in unimportant points, provided your article is written in the pyramid style. We recommend between 500 and 750 words, although for Tweets, you can go down to 250 or so. Cut at paragraph nearest end? - Whether to cut the article at the nearest paragraph to the word limit. This is useful if you want to avoid cutting a sentence in half. If you don't want to cut at the nearest paragraph, the article will be cut at the word limit. Max Tokens - This is the maximum number of tokens that OpenAI will use, but be aware that it includes both the submitted text as well as the result. A low number can result in the response being truncated. Make sure your number is high enough to allow for the submitted text, and the result. See What are tokens and how to count them? for more information. Temperature - What sampling temperature to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer. We generally recommend altering this or top_p but not both. Top P - What top_p to use. An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We generally recommend altering this or temperature but not both. Presence Penalty - Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics. Frequency Penalty - Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim. Custom action - Call a custom action based on the summary and post, eg. post to Twitter. Use [post_url] and [summary], and [summary_encoded] as variables. See Custom Actions for more information.","title":"SummaryEngine Summary Types"},{"location":"custom-actions/","text":"SummaryEngine Custom Actions You can create custom actions to be called when a summary is generated. This can be useful for posting to Twitter, or sending an email. The custom action will not be fired automatically, but will present the editor with a button to call it. Custom Action Variables The following variables can be used in the custom action: - [post_url] - The permalink url to the current post - [summary] - A raw copy of the summary - [summary_encoded] - An encoded copy of the summary, suitable for use in a URL Example Custom Action The following example will post the summary to Twitter, using Twitter Web Intents : <a class=\"twitter-share-button\" href=\"https://twitter.com/intent/tweet?text=[summary_encoded] [post_url]\" target=\"_blank\"> Tweet</a>","title":"Custom Actions"},{"location":"custom-actions/#summaryengine-custom-actions","text":"You can create custom actions to be called when a summary is generated. This can be useful for posting to Twitter, or sending an email. The custom action will not be fired automatically, but will present the editor with a button to call it.","title":"SummaryEngine Custom Actions"},{"location":"custom-actions/#custom-action-variables","text":"The following variables can be used in the custom action: - [post_url] - The permalink url to the current post - [summary] - A raw copy of the summary - [summary_encoded] - An encoded copy of the summary, suitable for use in a URL","title":"Custom Action Variables"},{"location":"custom-actions/#example-custom-action","text":"The following example will post the summary to Twitter, using Twitter Web Intents : <a class=\"twitter-share-button\" href=\"https://twitter.com/intent/tweet?text=[summary_encoded] [post_url]\" target=\"_blank\"> Tweet</a>","title":"Example Custom Action"},{"location":"developers/","text":"SummaryEngine For Developers SummaryEngine uses machine learning to help editors generate summaries to articles. It would typically be used in a newsroom, but can be used in other contexts too. Multiple summaries can be generated for each article, serving different purposes. For instance, you might generate a bullet-point summary for the start of the article, a longer summary for use in a newsletter, and a Twitter summary. Summary Slug Each type of summary has a slug. The default slug is \"summary\", for a basic summary. You can add more slugs in the SummaryEngine settings page . Summary Rating Each summary has a rating. This is used to determine which summaries are shown to the public. The rating can be one of the following: - -1 - Rejected. This summary should not be shown to the public. - 0 - Unapproved. This summary has not been approved by an editor, and should be used with care. - 1 - Approved. This summary has been approved by an editor, and can be shown to the public. Post Metadata SummaryEngine stores the summaries in post metadata. The key is summaryengine_summary_{slug} . For example, the key for the default summary is summaryengine_summary . For a summary of type \"newsletter\", the key would be summaryengine_newsletter . In addition, we store the rating in the metadata key summaryengine_{slug}_rating . For example, the key for the default summary is summaryengine_summary_rating . For a summary of type \"newsletter\", the key would be summaryengine_newsletter_rating . You can retrieve the summaries using the get_post_meta function. For example, to get the default summary for post ID 123, you would use: $summary = get_post_meta(123, 'summaryengine_summary', true); $summary_rating = get_post_meta(123, 'summaryengine_summary_rating', true); Summary Feed A feed of summaries is available at /feed/summaryengine . See RSS Feeds for more information.","title":"For Developers"},{"location":"developers/#summaryengine-for-developers","text":"SummaryEngine uses machine learning to help editors generate summaries to articles. It would typically be used in a newsroom, but can be used in other contexts too. Multiple summaries can be generated for each article, serving different purposes. For instance, you might generate a bullet-point summary for the start of the article, a longer summary for use in a newsletter, and a Twitter summary.","title":"SummaryEngine For Developers"},{"location":"developers/#summary-slug","text":"Each type of summary has a slug. The default slug is \"summary\", for a basic summary. You can add more slugs in the SummaryEngine settings page .","title":"Summary Slug"},{"location":"developers/#summary-rating","text":"Each summary has a rating. This is used to determine which summaries are shown to the public. The rating can be one of the following: - -1 - Rejected. This summary should not be shown to the public. - 0 - Unapproved. This summary has not been approved by an editor, and should be used with care. - 1 - Approved. This summary has been approved by an editor, and can be shown to the public.","title":"Summary Rating"},{"location":"developers/#post-metadata","text":"SummaryEngine stores the summaries in post metadata. The key is summaryengine_summary_{slug} . For example, the key for the default summary is summaryengine_summary . For a summary of type \"newsletter\", the key would be summaryengine_newsletter . In addition, we store the rating in the metadata key summaryengine_{slug}_rating . For example, the key for the default summary is summaryengine_summary_rating . For a summary of type \"newsletter\", the key would be summaryengine_newsletter_rating . You can retrieve the summaries using the get_post_meta function. For example, to get the default summary for post ID 123, you would use: $summary = get_post_meta(123, 'summaryengine_summary', true); $summary_rating = get_post_meta(123, 'summaryengine_summary_rating', true);","title":"Post Metadata"},{"location":"developers/#summary-feed","text":"A feed of summaries is available at /feed/summaryengine . See RSS Feeds for more information.","title":"Summary Feed"},{"location":"editors/","text":"SummaryEngine For Editors SummaryEngine uses machine learning to help editors generate summaries to articles. It would typically be used in a newsroom, but can be used in other contexts too. It uses the \"human-in-the-loop\" approach, where the editor is responsible for quality control, and can choose to accept, reject or edit the summary. Multiple summaries can be generated for each article, serving different purposes. For instance, you might generate a bullet-point summary for the start of the article, a longer summary for use in a newsletter, and a Twitter summary. SummaryEngine uses OpenAI's Open-GPT machine learning models, so you will need an API key to use it. You can get one here . There are three ways of generating summaries. The first is the automatic summary generation, which can occure automatically when you publish a post. The second is the manual summary generation, which you can do from the post edit screen. The third is the bulk summary generation, which you can do from the SummaryEngine Review page. Automatic Summary Generation When you publish a post, SummaryEngine will automatically generate a summary for it, provided the feature is enabled and that you haven't already generated a summary for the post. The summary should still be approved by an editor before it is shown to the public, typically in the Review Page. Manual Summary Generation You can generate a summary for a post from the post edit screen. All that is required is that there is some text in the post body. You can then choose the summary type, and click \"Generate Summary\". The summary will be generated, and you can then approve or reject it. If you reject it, a new summary will be automatically generated for you (provided you have sufficient summaries remaining). This view has additional functionality compared to the Review Page. You can revert back to a previous Summary and select it instead. You can edit the summary before approving it. Bulk Summary Generation You can generate summaries for multiple posts at once from the SummaryEngine Review page. This is useful if you have a lot of posts that need summaries, or if you want to generate summaries for a specific type of post. To access it, go to SummaryEngine > Review . This screen will let you quickly approve, reject or edit summaries. You can also generate new summaries for posts that don't have one. Unapproved summaries are shown in yellow. Rejected summaries are shown in red. Approved summaries do not have a background colour. To generate a single summary, click \"Summarise\" next to the post. To generate summaries for multiple summary types, click \"Summarise All\". To approve a summary, simply mouseover the summary to expand it, and click the \"Approve\" button. To reject a summary, click the \"Reject\" button. A new summary will automatically be generated. To edit a summary, click the \"Edit\" button. To generate a new summary, click the \"Generate\" button. To preview an article, click the icon of the eye next to the article's title. To edit the article, click the article's title. You can search or filter the posts by date.","title":"For Editors"},{"location":"editors/#summaryengine-for-editors","text":"SummaryEngine uses machine learning to help editors generate summaries to articles. It would typically be used in a newsroom, but can be used in other contexts too. It uses the \"human-in-the-loop\" approach, where the editor is responsible for quality control, and can choose to accept, reject or edit the summary. Multiple summaries can be generated for each article, serving different purposes. For instance, you might generate a bullet-point summary for the start of the article, a longer summary for use in a newsletter, and a Twitter summary. SummaryEngine uses OpenAI's Open-GPT machine learning models, so you will need an API key to use it. You can get one here . There are three ways of generating summaries. The first is the automatic summary generation, which can occure automatically when you publish a post. The second is the manual summary generation, which you can do from the post edit screen. The third is the bulk summary generation, which you can do from the SummaryEngine Review page.","title":"SummaryEngine For Editors"},{"location":"editors/#automatic-summary-generation","text":"When you publish a post, SummaryEngine will automatically generate a summary for it, provided the feature is enabled and that you haven't already generated a summary for the post. The summary should still be approved by an editor before it is shown to the public, typically in the Review Page.","title":"Automatic Summary Generation"},{"location":"editors/#manual-summary-generation","text":"You can generate a summary for a post from the post edit screen. All that is required is that there is some text in the post body. You can then choose the summary type, and click \"Generate Summary\". The summary will be generated, and you can then approve or reject it. If you reject it, a new summary will be automatically generated for you (provided you have sufficient summaries remaining). This view has additional functionality compared to the Review Page. You can revert back to a previous Summary and select it instead. You can edit the summary before approving it.","title":"Manual Summary Generation"},{"location":"editors/#bulk-summary-generation","text":"You can generate summaries for multiple posts at once from the SummaryEngine Review page. This is useful if you have a lot of posts that need summaries, or if you want to generate summaries for a specific type of post. To access it, go to SummaryEngine > Review . This screen will let you quickly approve, reject or edit summaries. You can also generate new summaries for posts that don't have one. Unapproved summaries are shown in yellow. Rejected summaries are shown in red. Approved summaries do not have a background colour. To generate a single summary, click \"Summarise\" next to the post. To generate summaries for multiple summary types, click \"Summarise All\". To approve a summary, simply mouseover the summary to expand it, and click the \"Approve\" button. To reject a summary, click the \"Reject\" button. A new summary will automatically be generated. To edit a summary, click the \"Edit\" button. To generate a new summary, click the \"Generate\" button. To preview an article, click the icon of the eye next to the article's title. To edit the article, click the article's title. You can search or filter the posts by date.","title":"Bulk Summary Generation"},{"location":"rss/","text":"SummaryEngine RSS Feeds SummaryEngine can generate RSS feeds for your site, using the summaries you have generated. This can be useful for generating a newsletter, or for syndicating your content to other sites. Available RSS Feeds The default SummaryEngine RSS feed will be available at: /feed/summaryengine If your website is \"https://example.com\", then the RSS feed will be available at: \"https://example.com/feed/summaryengine\" This feed will give you the latest approved summaries for your site, of the type \"summary\", in reverse chronological order. Note: Only summaries that have been approved by an editor will be included in the RSS feed. RSS Feed Parameters You can add the following parameters to customise the RSS feed: type - The slug of the summary type you want to get limit - The number of summaries per page page - The page number rating - Only show summaries with this rating. (-1 = rejected, 0 = unapproved, 1 = approved) Example RSS Feed The following example will give you the latest 10 unapproved summaries of type \"newsletter\", in reverse chronological order starting at the second page: https://example.com/feed/summaryengine?type=newsletter&limit=10&page=2&rating=0","title":"RSS Feed"},{"location":"rss/#summaryengine-rss-feeds","text":"SummaryEngine can generate RSS feeds for your site, using the summaries you have generated. This can be useful for generating a newsletter, or for syndicating your content to other sites.","title":"SummaryEngine RSS Feeds"},{"location":"rss/#available-rss-feeds","text":"The default SummaryEngine RSS feed will be available at: /feed/summaryengine If your website is \"https://example.com\", then the RSS feed will be available at: \"https://example.com/feed/summaryengine\" This feed will give you the latest approved summaries for your site, of the type \"summary\", in reverse chronological order. Note: Only summaries that have been approved by an editor will be included in the RSS feed.","title":"Available RSS Feeds"},{"location":"rss/#rss-feed-parameters","text":"You can add the following parameters to customise the RSS feed: type - The slug of the summary type you want to get limit - The number of summaries per page page - The page number rating - Only show summaries with this rating. (-1 = rejected, 0 = unapproved, 1 = approved)","title":"RSS Feed Parameters"},{"location":"rss/#example-rss-feed","text":"The following example will give you the latest 10 unapproved summaries of type \"newsletter\", in reverse chronological order starting at the second page: https://example.com/feed/summaryengine?type=newsletter&limit=10&page=2&rating=0","title":"Example RSS Feed"},{"location":"types/","text":"SummaryEngine Summary Types You can create, delete and manage different types of summaries in the Wordpress admin panel, under SummaryEngine > Types. Click the \"New Type\" tab to create a new type. Types have the following fields: Name - The name of the type. This is used to identify the type in the admin panel, and is also used in the RSS feed. Slug - The slug of the type. This will be used in as the post metadata key. It is automatically generated from the name. Prepend Prompt - This is typically the instruction you want to send to the model, such as \"Write a summary of this article\". It will be prepended to the article text that we submit to GPT-3. Append Prompt - This is typically an example of the format we want returned, and important to note that it will be appended to the result. For instance, you might want to add a bullet point ( - ) to the end of the prompt, so that the model knows to return a bullet-pointed list. Usually you will leave this blank. OpenAI Model Method - Select Chat for chatbot-like APIs (noteably ChatGPT-4) or Complete for the standard API (GPT-3 or GPT-3.5). OpenAI Model - The OpenAI model to use. You can choose from Text-Davinci-001, Text-Davinci-002, Text-Davinci-003, Text-Curie-001, Text-Babbage-001 or Text-Ada-001. There are cost implications with choosing a better model, and it might not always perform as well as one of the other options. See OpenAI's documentation for more information. Submission word limit - The maximum number of words to allow in a submission. Very long articles could either become very expensive, or the model might not be able to generate a summary. For some cases, you might get better results by exposing less of the article, which can bring in unimportant points, provided your article is written in the pyramid style. We recommend between 500 and 750 words, although for Tweets, you can go down to 250 or so. Cut at paragraph nearest end? - Whether to cut the article at the nearest paragraph to the word limit. This is useful if you want to avoid cutting a sentence in half. If you don't want to cut at the nearest paragraph, the article will be cut at the word limit. Max Tokens - This is the maximum number of tokens that OpenAI will use, but be aware that it includes both the submitted text as well as the result. A low number can result in the response being truncated. Make sure your number is high enough to allow for the submitted text, and the result. See What are tokens and how to count them? for more information. Temperature - What sampling temperature to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer. We generally recommend altering this or top_p but not both. Top P - What top_p to use. An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We generally recommend altering this or temperature but not both. Presence Penalty - Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics. Frequency Penalty - Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim. Custom action - Call a custom action based on the summary and post, eg. post to Twitter. Use [post_url] and [summary], and [summary_encoded] as variables. See Custom Actions for more information.","title":"Types"},{"location":"types/#summaryengine-summary-types","text":"You can create, delete and manage different types of summaries in the Wordpress admin panel, under SummaryEngine > Types. Click the \"New Type\" tab to create a new type. Types have the following fields: Name - The name of the type. This is used to identify the type in the admin panel, and is also used in the RSS feed. Slug - The slug of the type. This will be used in as the post metadata key. It is automatically generated from the name. Prepend Prompt - This is typically the instruction you want to send to the model, such as \"Write a summary of this article\". It will be prepended to the article text that we submit to GPT-3. Append Prompt - This is typically an example of the format we want returned, and important to note that it will be appended to the result. For instance, you might want to add a bullet point ( - ) to the end of the prompt, so that the model knows to return a bullet-pointed list. Usually you will leave this blank. OpenAI Model Method - Select Chat for chatbot-like APIs (noteably ChatGPT-4) or Complete for the standard API (GPT-3 or GPT-3.5). OpenAI Model - The OpenAI model to use. You can choose from Text-Davinci-001, Text-Davinci-002, Text-Davinci-003, Text-Curie-001, Text-Babbage-001 or Text-Ada-001. There are cost implications with choosing a better model, and it might not always perform as well as one of the other options. See OpenAI's documentation for more information. Submission word limit - The maximum number of words to allow in a submission. Very long articles could either become very expensive, or the model might not be able to generate a summary. For some cases, you might get better results by exposing less of the article, which can bring in unimportant points, provided your article is written in the pyramid style. We recommend between 500 and 750 words, although for Tweets, you can go down to 250 or so. Cut at paragraph nearest end? - Whether to cut the article at the nearest paragraph to the word limit. This is useful if you want to avoid cutting a sentence in half. If you don't want to cut at the nearest paragraph, the article will be cut at the word limit. Max Tokens - This is the maximum number of tokens that OpenAI will use, but be aware that it includes both the submitted text as well as the result. A low number can result in the response being truncated. Make sure your number is high enough to allow for the submitted text, and the result. See What are tokens and how to count them? for more information. Temperature - What sampling temperature to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer. We generally recommend altering this or top_p but not both. Top P - What top_p to use. An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We generally recommend altering this or temperature but not both. Presence Penalty - Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics. Frequency Penalty - Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim. Custom action - Call a custom action based on the summary and post, eg. post to Twitter. Use [post_url] and [summary], and [summary_encoded] as variables. See Custom Actions for more information.","title":"SummaryEngine Summary Types"}]}